variable vs. ::variable			Local variables are prioritized, so use :: to access the global
Heap vs. Stack				One is Static, the other is Dynamic; in C: malloc + free; in C++: new + delete
Stack overflow				When you exceed the Stack's limit (e.g., through deep recursion)
malloc vs. calloc			malloc to allocate heap memory; calloc is to initialize to zero
References				& = address-of; * = de-reference; always pass by reference
Always delete memory			Add brackets after the delete if you need to delete an array
Structures				Are passed by value; not reference
